#-------------------------------------------------------------------------------
# MySQL Settings

jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/nokiamonitor
jdbc.username=root
jdbc.password=admin

#-------------------------------------------------------------------------------
# DBCP Connection Pool replace Hibernate Connection Pool
dbcp.initialSize=5
dbcp.maxActive=40
jdbc.maxIdle=20
jdbc.minIdle=15

#-------------------------------------------------------------------------------
# C3P0 Connection Pool replace Hibernate Connection Pool
#hibernate.c3p0.min_size=5
#hibernate.c3p0.max_size=20
#hibernate.c3p0.timeout=1800
#hibernate.c3p0.max_statements=50
#hibernate.c3p0.idle_test_period=3000
#hibernate.c3p0.acquire_increment=2
#hibernate.c3p0.validate=false

#-------------------------------------------------------------------------------
# Common Settings

hibernate.generate_statistics=true
hibernate.show_sql=true
hibernate.format_sql=false

# \u5f3a\u5236 Hibernate \u6309\u7167\u88ab\u66f4\u65b0\u6570\u636e\u7684\u4e3b\u952e\uff0c\u4e3aSQL \u66f4\u65b0\u6392\u5e8f\u3002\u8fd9\u4e48\u505a\u5c06\u51cf\u5c11\u5728\u9ad8\u5e76\u53d1\u7cfb\u7edf\u4e2d\u4e8b\u52a1\u7684\u6b7b\u9501\u3002
hibernate.order_updates=true

# \u4e3a\u5355\u5411\u5173\u8054\uff08\u4e00\u5bf9\u4e00\uff0c\u591a\u5bf9\u4e00\uff09\u7684\u5916\u8fde\u63a5\u6293\u53d6\uff08outer join fetch\uff09\u6811\u8bbe\u7f6e\u6700\u5927\u6df1\u5ea6\u3002
# \u503c\u4e3a0 \u610f\u5473\u7740\u5c06\u5173\u95ed\u9ed8\u8ba4\u7684\u5916\u8fde\u63a5\u6293\u53d6\u3002
# \u5efa\u8bae\u5728 0 \u5230 3 \u4e4b\u95f4\u53d6\u503c
hibernate.max_fetch_depth 1

# \u4e3a Hibernate \u5173\u8054\u7684\u6279\u91cf\u6293\u53d6\u8bbe\u7f6e\u9ed8\u8ba4\u6570\u91cf\u3002\u5efa\u8bae\u7684\u53d6\u503c\u4e3a 4\uff0c8\uff0c\u548c 16
hibernate.default_batch_fetch_size 8

# \u5982\u679c\u5f00\u542f\uff0c\u5728\u5bf9\u8c61\u88ab\u5220\u9664\u65f6\u751f\u6210\u7684\u6807\u8bc6\u5c5e\u6027\u5c06\u88ab\u91cd\u8bbe\u4e3a\u9ed8\u8ba4\u503c\u3002
#hibernate.use_identifer_rollback=true

# Enables the use of bytecode manipulation
# instead of runtime reflection. This is a
# System-level property and cannot be set in
# hibernate.cfg.xml. Reflection can sometimes
# be useful when troubleshooting. Hibernate
# always requires either CGLIB or javassist
# even if you turn off the optimizer.
# (disabled by default)
#hibernate.bytecode.use_reflection_optimizer=true

# add comments to the generated SQL
#hibernate.use_sql_comments true

# auto schema export
#hibernate.hbm2ddl.auto=create-drop
#hibernate.hbm2ddl.auto=create
#hibernate.hbm2ddl.auto=update

# specify a default schema and catalog for unqualified tablenames
#hibernate.default_schema test
#hibernate.default_catalog test

# \u5c06 Hibernate \u67e5\u8be2\u4e2d\u7684\u7b26\u53f7\u6620\u5c04\u5230 SQL \u67e5\u8be2\u4e2d\u7684\u7b26\u53f7\uff08\u7b26\u53f7\u53ef\u80fd\u662f\u51fd\u6570\u540d\u6216\u5e38\u91cf\u540d\u5b57\uff09
#hibernate.query.substitutions=true 1, false 0 ,yes 'Y', no 'N'

# Properties that control the population of schema and data for a new data source
# jdbc.initLocation=classpath:db/mysql/initDB.txt
# jdbc.dataLocation=classpath:db/mysql/populateDB.txt

# Property that determines which Hibernate dialect to use
# (only applied with "applicationContext-hibernate.xml")
hibernate.dialect=org.hibernate.dialect.MySQLDialect

#-------------------------------------------------------------------------------
# Plugin ConnectionProvider 
hibernate.connection.provider_class=org.hibernate.connection.C3P0ConnectionProvider

#-------------------------------------------------------------------------------
# Transaction API
# hibernate.transaction.flush_before_completion=true
# hibernate.transaction.auto_close_session=true

# the Transaction API abstracts application code from the underlying JTA or JDBC transactions 
# default is JDBCTransactionFactory
# hibernate.transaction.factory_class org.hibernate.transaction.JTATransactionFactory
# hibernate.transaction.factory_class org.hibernate.transaction.JDBCTransactionFactory

# JDBC Settings
# \u8bbe\u7f6e JDBC \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u3002\u67e5\u770bjava.sql.Connection \u6765\u4e86\u89e3\u5404\u4e2a\u503c\u7684\u5177\u4f53\u610f\u4e49\uff0c
# \u4f46\u8bf7\u6ce8\u610f\u591a\u6570\u6570\u636e\u5e93\u90fd\u4e0d\u652f\u6301\u6240\u6709\u7684\u9694\u79bb\u7ea7\u522b\u3002
# hibernate.connection.isolation=4

# \u5141\u8bb8\u88ab\u7f13\u5b58\u7684 JDBC \u8fde\u63a5\u5f00\u542f\u81ea\u52a8\u63d0\u4ea4\uff08autocommit\uff09\uff08\u4e0d\u63a8\u8350\uff09\u3002
# hibernate.connection.autocommit=true

# \u975e\u96f6\u503c\uff0c\u6307\u5b9a JDBC \u6293\u53d6\u6570\u91cf\u7684\u5927\u5c0f\uff08\u8c03\u7528Statement.setFetchSize()\uff09\u3002
#hibernate.jdbc.fetch_size=25

# \u975e\u96f6\u503c\uff0c\u5141\u8bb8 Hibernate \u4f7f\u7528 JDBC2 \u7684\u6279\u91cf\u66f4\u65b0\u3002\u5efa\u8bae\u53d6 5 \u5230 30 \u4e4b\u95f4\u7684\u503c
#hibernate.jdbc.batch_size=5

# Set this property to true if your JDBC
# driver returns correct row counts from
# executeBatch(). It is usually safe to turn
# this option on. Hibernate will then use
# batched DML for automatically versioned
# data. Defaults to false.
#hibernate.jdbc.batch_versioned_data=true


# \u5141\u8bb8 Hibernate \u4f7f\u7528 JDBC2 \u7684\u53ef\u6eda\u52a8\u7ed3\u679c\u96c6\u3002\u53ea\u6709\u5728\u4f7f\u7528\u7528\u6237\u63d0\u4f9b\u7684 JDBC \u8fde\u63a5\u65f6\uff0c
# \u8fd9\u4e2a\u9009\u9879\u624d\u662f\u5fc5\u8981\u7684\uff0c\u5426\u5219 Hibernate \u4f1a\u4f7f\u7528\u8fde\u63a5\u7684\u5143\u6570\u636e\u3002
#hibernate.jdbc.use_scrollable_resultset=true

# \u5728 JDBC \u8bfb\u5199 binary \u6216 serializable \u7684\u7c7b\u578b\u65f6\u4f7f\u7528\u6d41\uff08stream\uff09\uff08\u7cfb\u7edf\u7ea7\u5c5e\u6027\uff09\u3002
hibernate.jdbc.use_streams_for_binary=true

# \u5728\u6570\u636e\u63d2\u5165\u6570\u636e\u5e93\u4e4b\u540e\uff0c\u5141\u8bb8\u4f7f\u7528 JDBC3PreparedStatement.getGeneratedKeys() \u6765\u83b7\u53d6
# \u6570\u636e\u5e93\u751f\u6210\u7684 key\uff08\u952e\uff09\u3002\u9700\u8981 JDBC3+ \u9a71\u52a8\u548c JRE1.4+\uff0c\u5982\u679c\u4f60\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5728\u4f7f\u7528
# Hibernate \u7684\u6807\u8bc6\u751f\u6210\u5668\u65f6\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u5c06\u6b64\u503c\u8bbe\u4e3a false\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u4f7f\u7528\u8fde\u63a5\u7684\u5143\u6570
# \u636e\u6765\u5224\u5b9a\u9a71\u52a8\u7684\u80fd\u529b\u3002
#hibernate.jdbc.use_get_generated_keys=false

#-------------------------------------------------------------------------------
# Second-level Cache

# \u4ee5\u9891\u7e41\u7684\u8bfb\u64cd\u4f5c\u4e3a\u4ee3\u4ef7\uff0c\u4f18\u5316\u4e8c\u7ea7\u7f13\u5b58\u6765\u6700\u5c0f\u5316\u5199\u64cd\u4f5c\u3002\u5728 Hibernate3 \u4e2d\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u5bf9\u7684
# \u96c6\u7fa4\u7f13\u5b58\u975e\u5e38\u6709\u7528\uff0c\u5bf9\u96c6\u7fa4\u7f13\u5b58\u7684\u5b9e\u73b0\u800c\u8a00\uff0c\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\u3002
#hibernate.cache.use_minimal_puts=true
 
# \u4e8c\u7ea7\u7f13\u5b58\u533a\u57df\u540d\u7684\u524d\u7f00
#hibernate.cache.region_prefix hibernate.test

# \u80fd\u7528\u6765\u5b8c\u5168\u7981\u6b62\u4f7f\u7528\u4e8c\u7ea7\u7f13\u5b58\u3002\u5bf9\u90a3\u4e9b\u5728\u7c7b\u7684\u6620\u5c04\u5b9a\u4e49\u4e2d\u6307\u5b9a <cache> \u7684\u7c7b\uff0c\u4f1a\u9ed8\u8ba4\u5f00\u542f\u4e8c\u7ea7\u7f13\u5b58\u3002
#hibernate.cache.use_second_level_cache=false

# \u5141\u8bb8\u67e5\u8be2\u7f13\u5b58\uff0c\u4e2a\u522b\u67e5\u8be2\u4ecd\u7136\u9700\u8981\u88ab\u8bbe\u7f6e\u4e3a\u53ef\u7f13\u5b58\u7684
#hibernate.cache.use_query_cache=true

# \u5f3a\u5236 Hibernate \u4ee5\u66f4\u4eba\u6027\u5316\u7684\u683c\u5f0f\u5c06\u6570\u636e\u5b58\u5165\u4e8c\u7ea7\u7f13\u5b58\u3002
#hibernate.cache.use_structured_entries=true

# choose a cache implementation\u4ee5\u4e0b\u662f\u5404\u7a2e\u7de9\u5b58\u7b56\u7565\u63d0\u4f9b\u5546

#hibernate.cache.provider_class org.hibernate.cache.EhCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.EmptyCacheProvider
hibernate.cache.provider_class org.hibernate.cache.HashtableCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.TreeCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.OSCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.SwarmCacheProvider

#\u81ea\u5b9a\u4e49\u5b9e\u73b0 QueryCache \u63a5\u53e3\u7684\u7c7b\u540d\uff0c\u9ed8\u8ba4\u4e3a\u5185\u5efa\u7684 StandardQueryCache\u3002
#hibernate.cache.query_cache_factory


